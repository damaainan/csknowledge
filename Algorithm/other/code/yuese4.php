<?php 

/**
 * “约瑟夫环”是一个数学的应用问题：一群猴子排成一圈，按1,2,…,n依次编号。然后从第1只开始数，数到第m只,把它踢出圈，从它后面再开始数， 再数到第m只，在把它踢出去…，如此不停的进行下去， 直到最后只剩下一只猴子为止，那只猴子就叫做大王。要求编程模拟此过程，输入m、n, 输出最后那个大王的编号。
 *
 *
 *
 * 方法三：线性表应用


最后这个算法最牛，有网友给了解释：  
哦，是这样的，
每个猴子出列后，剩下的猴子又组成了另一个子问题。只是他们的编号变化了。
第一个出列的猴子肯定是a[1]=m(mod)n(m/n的余数)，他除去后剩下的猴子是a[1]+1,a[1]+2,…,n,1,2,…a[1]-2,a[1]-1，对应的新编号是1,2,3…n-1。
设此时某个猴子的新编号是i，他原来的编号就是(i+a[1])%n。
于是，这便形成了一个递归问题。
假如知道了这个子问题(n-1个猴子)的解是x，那么原问题(n个猴子)的解便是：(x+m%n)%n=(x+m)%n。
问题的起始条件：如果n=1,那么结果就是1。

 */



function yuesefu($n,$m) {
    $r=0;
    for($i=2; $i<=$n; $i++) {
        $r=($r+$m)%$i;
    }
    return $r+1;
}
echo yuesefu(10,3)."是猴王";